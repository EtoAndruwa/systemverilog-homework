$date
	Sun Apr 13 17:09:52 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! parallel_valid $end
$var wire 8 " parallel_data [7:0] $end
$var reg 1 # clk $end
$var reg 1 $ d_serial_data $end
$var reg 1 % d_serial_valid $end
$var reg 10 & in_vld_cnt [9:0] $end
$var reg 7 ' out_vld_cnt [6:0] $end
$var reg 8 ( parallel_data_expected [7:0] $end
$var reg 1 ) rst $end
$var reg 1 * serial_data $end
$var reg 1 + serial_valid $end
$var integer 32 , current_inputs [31:0] $end
$var reg 1 - was_reset $end
$scope module dut $end
$var wire 1 # clk $end
$var wire 1 ) rst $end
$var wire 1 * serial_data $end
$var wire 1 + serial_valid $end
$var reg 4 . bits_count [3:0] $end
$var reg 8 / parallel_data [7:0] $end
$var reg 1 ! parallel_valid $end
$var reg 8 0 shift_reg [7:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 1 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 1
bx 0
bx /
bx .
0-
b0 ,
0+
0*
x)
bx (
bx '
bx &
x%
x$
0#
bx "
x!
$end
#500
0!
1#
#1000
0#
#1500
b0 "
b0 /
b0 0
b0 .
1)
1#
#2000
0#
#2500
b0 &
b0 '
1-
1#
#3000
0#
#3500
1+
1*
b1 ,
1$
1%
0)
1#
#4000
0#
#4500
b1 .
b1 0
b1 &
0*
b10 ,
0$
1#
#5000
0#
#5500
b10 .
b10 0
1*
b10 &
b11 ,
1$
1#
#6000
0#
#6500
b11 .
b101 0
b11 &
0*
b100 ,
0$
1#
#7000
0#
#7500
b100 .
b1010 0
1*
b100 &
b101 ,
1$
1#
#8000
0#
#8500
b101 .
b10101 0
b101 &
0*
b110 ,
0$
1#
#9000
0#
#9500
b110 .
b101010 0
1*
b110 &
b111 ,
1$
1#
#10000
0#
#10500
b111 .
b1010101 0
b111 &
0*
b1000 ,
0$
1#
#11000
0#
#11500
b10101010 "
b10101010 /
1!
b0 .
b0 0
1*
b1000 &
b1001 ,
1$
1#
#12000
0#
#12500
b1 .
b1 0
0!
b1 '
b1001 &
0*
b1000 1
b1010101 (
b1010 ,
0$
1#
